name: build

on:
  push:
    paths:
      - "**/*.yml"
  release:
    types:
      - published

defaults:
  run:
    shell: bash -l {0}

env:
  PYSYN_CDBS: /home/runner/trds
  CRDS_PATH: /home/runner/crds_cache
  CRDS_SERVER_URL: https://hst-crds.stsci.edu

jobs:
  build:
    name: build environment (Python ${{ matrix.python }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: [ '3.8', '3.9', '3.10' ]
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v3.0.2
      - run: sed -i "s/python==3.9/python==${{ matrix.python }}.\*/g" spacetelescope-env-latest.yml
        if: matrix.os == 'ubuntu-latest'
      - run: sed -i "" "s/python==3.9/python==${{ matrix.python }}.\*/g" spacetelescope-env-latest.yml
        if: matrix.os == 'macos-latest'
      - uses: actions/setup-python@v4.1.0
        with:
          python-version: ${{ matrix.python }}
      - uses: mtkennerly/dunamai-action@v1.1.0
        id: version
      - run: echo "::set-output name=date::$(date +'%Y%m%d')"
        id: date
      - uses: actions/cache@v3.0.5
        id: cache
        with:
          path: |
            /home/runner/conda_pkgs_dir
            /usr/share/miniconda/envs/spacetelescope-env-${{ runner.os }}-py${{ matrix.python }}-latest
          key: conda-${{ runner.os }}-py${{ matrix.python }}-${{ steps.date.outputs.date }}
      - uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: spacetelescope-env-${{ runner.os }}-py${{ matrix.python }}-latest
          environment-file: spacetelescope-env-latest.yml
          python-version: ${{ matrix.python }}.*
          auto-update-conda: true
          use-only-tar-bz2: true
      - run: conda update --all
        if: steps.cache.outputs.cache-hit != 'true'
      - run: conda install -y pytest pytest-xdist
      - run: pytest -n auto tests/test_import.py
      - run: conda env export > spacetelescope-env-py${{ matrix.python }}-v${{ steps.version.outputs.version }}.yml
        if: matrix.os == 'ubuntu-latest'
      - run: sed -i "s/spacetelescope-env-${{ runner.os }}-py${{ matrix.python }}-latest/spacetelescope-env-py${{ matrix.python }}-v${{ steps.version.outputs.version }}/g" spacetelescope-env-py${{ matrix.python }}-v${{ steps.version.outputs.version }}.yml
        if: matrix.os == 'ubuntu-latest'
      - run: cat spacetelescope-env-py${{ matrix.python }}-v${{ steps.version.outputs.version }}.yml
        if: matrix.os == 'ubuntu-latest'
      - uses: actions/upload-artifact@v3.1.0
        if: matrix.os == 'ubuntu-latest'
        with:
          name: spacetelescope-env-py${{ matrix.python }}-v${{ steps.version.outputs.version }}.yml
          path: spacetelescope-env-py${{ matrix.python }}-v${{ steps.version.outputs.version }}.yml
  unit_tests:
    name: run `${{ matrix.package }}` unit tests (Python ${{ matrix.python }}, ${{ matrix.os }})
    needs: [ build ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        package: [ acstools, ccdproc, costools, reftools, stsynphot, synphot, wfpc2tools ]
        python: [ '3.8', '3.9', '3.10' ]
        os: [ ubuntu-latest, macos-latest ]
        include:
          - package: acstools
            dependencies: [ ci-watson, pytest-astropy-header, pytest-remotedata ]
          - package: ccdproc
            dependencies: [ memory_profiler, pytest-astropy ]
          - package: costools
          #- package: crds
          #  dependencies: [ lockfile, mock, nose, pylint ]
          #- package: nictools
          #- package: pysynphot
          #  dependencies: [ pytest-remotedata, pytest-astropy-header ]
          - package: reftools
            dependencies: [ pytest-remotedata, pytest-astropy-header ]
          - package: stsynphot
            dependencies: [ ci-watson, pytest-astropy ]
            pytest_args: --ignore=stsynphot/data --ignore=stsynphot/commissioning
          - package: synphot
            dependencies: [ pytest-astropy ]
          #- package: wfc3tools
          #  dependencies: [ ]
          - package: wfpc2tools
    steps:
      - uses: actions/checkout@v3.0.2
      - run: sed -i "s/python==3.9/python==${{ matrix.python }}.\*/g" spacetelescope-env-latest.yml
        if: matrix.os == 'ubuntu-latest'
      - run: sed -i "" "s/python==3.9/python==${{ matrix.python }}.\*/g" spacetelescope-env-latest.yml
        if: matrix.os == 'macos-latest'
      - run: echo "::set-output name=date::$(date +'%Y%m%d')"
        id: date
      - uses: actions/cache@v3.0.5
        with:
          path: |
            /home/runner/conda_pkgs_dir
            /usr/share/miniconda/envs/spacetelescope-env-${{ runner.os }}-py${{ matrix.python }}-latest
          key: conda-${{ runner.os }}-py${{ matrix.python }}-${{ steps.date.outputs.date }}
      - uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: spacetelescope-env-${{ runner.os }}-py${{ matrix.python }}-latest
          environment-file: spacetelescope-env-latest.yml
          python-version: ${{ matrix.python }}.*
          auto-update-conda: true
          use-only-tar-bz2: true
      - run: conda install -y pytest pytest-xdist
      - run: pip install ${{ join(matrix.dependencies, ' ') }}
        if: matrix.dependencies != ''
      - run: pytest -n auto ${{ matrix.pytest_args }} --pyargs ${{ matrix.package }}
  unit_tests_from_source:
    name: run `${{ matrix.package }}` unit tests (Python ${{ matrix.python }}, ${{ matrix.os }}) from source
    needs: [ build ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        package: [ calcos, hstcal ]
        python: [ '3.8', '3.9', '3.10' ]
        os: [ ubuntu-latest, macos-latest ]
        include:
          - package: calcos
            repository: spacetelescope/calcos
            dependencies: [ ci_watson ]
            test_directory: tests
          #- package: drizzlepac
          #  repository: spacetelescope/drizzlepac
          #  dependencies: [ ci-watson, crds, pytest-remotedata ]
          #  test_directory: tests
          - package: hstcal
            repository: spacetelescope/hstcal
            dependencies: [ ci-watson ]
            test_directory: tests
          #- package: stistools
          #  repository: spacetelescope/stistools
          #  dependencies: [ six ]
          #  test_directory: tests
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          path: spacetelescope-env-distribution
      - run: sed -i "s/python==3.9/python==${{ matrix.python }}.\*/g" spacetelescope-env-distribution/spacetelescope-env-latest.yml
        if: matrix.os == 'ubuntu-latest'
      - run: sed -i "" "s/python==3.9/python==${{ matrix.python }}.\*/g" spacetelescope-env-distribution/spacetelescope-env-latest.yml
        if: matrix.os == 'macos-latest'
      - run: echo "::set-output name=date::$(date +'%Y%m%d')"
        id: date
      - uses: actions/cache@v3.0.5
        with:
          path: |
            /home/runner/conda_pkgs_dir
            /usr/share/miniconda/envs/spacetelescope-env-${{ runner.os }}-py${{ matrix.python }}-latest
          key: conda-${{ runner.os }}-py${{ matrix.python }}-${{ steps.date.outputs.date }}
      - uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: spacetelescope-env-${{ runner.os }}-py${{ matrix.python }}-latest
          environment-file: spacetelescope-env-distribution/spacetelescope-env-latest.yml
          python-version: ${{ matrix.python }}.*
          auto-update-conda: true
          use-only-tar-bz2: true
      - uses: actions/checkout@v3.0.2
        with:
          path: ${{ matrix.package }}
          repository: ${{ matrix.repository }}
      - run: cd ${{ matrix.package }} && conda install -y pytest pytest-xdist
      - run: cd ${{ matrix.package }} && pip install ${{ join(matrix.dependencies, ' ') }}
        if: matrix.dependencies != ''
      - run: cd ${{ matrix.package }} && pytest -n auto ${{ matrix.pytest_args }} ${{ matrix.test_directory }}
  smoke_tests:
    name: run `${{ matrix.package }}` smoke tests (Python ${{ matrix.python }}, ${{ matrix.os }})
    needs: [ build ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        package: [ calcos, drizzlepac ]
        python: [ '3.8', '3.9', '3.10' ]
        os: [ ubuntu-latest, macos-latest ]
        include:
          - package: calcos
            run: calcos la8n01qkq_rawtag_a.fits
            jref: /home/runner/crds_cache/hst/references/hst/
          - package: drizzlepac
            run: pytest -n auto tests/test_drizzlepac.py
            jref: /home/runner/crds_cache/hst/references/hst/
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          lfs: true
      - run: sed -i "s/python==3.9/python==${{ matrix.python }}.\*/g" spacetelescope-env-latest.yml
        if: matrix.os == 'ubuntu-latest'
      - run: sed -i "" "s/python==3.9/python==${{ matrix.python }}.\*/g" spacetelescope-env-latest.yml
        if: matrix.os == 'macos-latest'
      - run: echo "::set-output name=date::$(date +'%Y%m%d')"
        id: date
      - uses: actions/cache@v3.0.5
        with:
          path: |
            /home/runner/conda_pkgs_dir
            /usr/share/miniconda/envs/spacetelescope-env-${{ runner.os }}-py${{ matrix.python }}-latest
          key: conda-${{ runner.os }}-py${{ matrix.python }}-${{ steps.date.outputs.date }}
      - uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: spacetelescope-env-${{ runner.os }}-py${{ matrix.python }}-latest
          environment-file: spacetelescope-env-latest.yml
          python-version: ${{ matrix.python }}.*
          auto-update-conda: true
          use-only-tar-bz2: true
      - uses: actions/cache@v3.0.5
        with:
          path: 'tests/data/'
          key: conda-${{ hashFiles('tests/data/*') }}
      - run: conda install -y pytest pytest-xdist
      - run: ${{ matrix.run }}
        env:
          jref: ${{ matrix.jref }}
  export:
    name: export environment (Python ${{ matrix.python }}, ${{ matrix.os }})
    needs: [ unit_tests, unit_tests_from_source, smoke_tests ]
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: [ '3.8', '3.9', '3.10' ]
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: actions/setup-python@v4.1.0
        with:
          python-version: ${{ matrix.python }}
      - uses: mtkennerly/dunamai-action@v1.1.0
        id: version
      - uses: actions/cache@v3.0.5
        id: cache
        with:
          path: |
            /home/runner/conda_pkgs_dir
            /usr/share/miniconda/envs/spacetelescope-env-${{ runner.os }}-py${{ matrix.python }}-latest
          key: conda-${{ runner.os }}-py${{ matrix.python }}-${{ steps.date.outputs.date }}
      - uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: spacetelescope-env-${{ runner.os }}-py${{ matrix.python }}-latest
          environment-file: spacetelescope-env-latest.yml
          python-version: ${{ matrix.python }}.*
          auto-update-conda: true
          use-only-tar-bz2: true
      - run: conda env export > spacetelescope-env-py${{ matrix.python }}-v${{ steps.version.outputs.version }}.yml
        if: matrix.os == 'ubuntu-latest'
      - run: sed -i "s/spacetelescope-env-${{ runner.os }}-py${{ matrix.python }}-latest/spacetelescope-env-py${{ matrix.python }}-v${{ steps.version.outputs.version }}/g" spacetelescope-env-py${{ matrix.python }}-v${{ steps.version.outputs.version }}.yml
        if: matrix.os == 'ubuntu-latest'
      - uses: svenstaro/upload-release-action@2.3.0
        if: matrix.os == 'ubuntu-latest'
        with:
          file: spacetelescope-env-py${{ matrix.python }}-v${{ steps.version.outputs.version }}.yml
